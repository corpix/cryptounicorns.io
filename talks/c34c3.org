#+REVEAL_ROOT: vendor/reveal.js-3.4.1
#+OPTIONS: toc:nil
#+OPTIONS: num:nil
#+REVEAL_THEME: simple
#+REVEAL_TRANS: linear
#+REVEAL_PLUGINS: (highlight notes)
#+REVEAL_EXTRA_CSS: ./vendor/reveal-fixes.css
#+REVEAL_HIGHLIGHT_CSS: %r/lib/css/docco.css

#+Title: Yet another cryptocurrency portfolio application (looking for contributors)
#+Author:
#+Email:

* Facts
  - 1300+ cryptocurrencies and growing :: source: wikipedia
  - ~100 cryptocurrency exchanges :: source: coinmarketcap
* What we are working on?
  #+BEGIN_NOTES
  How idea of this application emerged
  #+END_NOTES

  Desktop application for cryptocurrency price tracking across multiple exchanges.

* What it looks like

  #+ATTR_HTML: :height 500
  [[./c34c3-app.png]]

* Goals
  - unified API across multiple exchanges
  - easy portfolio tracking
  - agile alerts
* What it looks like from technical point of view
  - gather data
  - normalize it
  - store into database
  - push to client

* Kinda like this
   #+BEGIN_SRC dot :file c34c3-architecture-diagram.png
   digraph ArchitectureHighlevel {
     rankdir = LR;
     mq [label = "message queue"];
     subgraph cluster_fetching {
       mole [label = "data gathering"];
       bitfinex         [label = "Bitfinex"];
       gdax             [label = "Gdax"];
       bittrex          [label = "Bittrex"];
       anyOtherExchange [label = "..."];
       mole -> bitfinex [label = "read"];
       mole -> gdax [label = "read"];
       mole -> bittrex [label = "read"];
       mole -> anyOtherExchange [label = "read"];
     }
     subgraph cluster_clients {
       clientN [label = "client(-s)"];
     }
     subgraph cluster_storage {
       gluttony  [label = "data storage"];
       mammoth   [label = "query API"];
       database  [label = "database"];
       gluttony -> database [label = "write"];
       database -> mammoth [label = "read"];
       clientN  -> mammoth [label = "query data"];
     }
     subgraph cluster_serving {
       platypus  [label = "data proxy"];
       clientN -> platypus [label = "websocket"];
     }
     mq -> platypus [label = "read"];
     mq -> gluttony [label = "read"];
     mole -> mq [label = "write"];
   }
   #+END_SRC

   #+RESULTS:
   [[file:c34c3-architecture-diagram.png]]

* Demo time!
* We are on very early stage and looking for contributors
  designers, testers, developers are welcome

  (we are opensource, MIT-licensed)

* Roadmap
  - support more exchanges
  - improve code quality
  - builds for most desktop platforms
  - gain more information from markets

* Thank you

  Questions?

  Find us on GitHub https://github.com/cryptounicorns
